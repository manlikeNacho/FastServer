name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

      - name: Check database migrations
        run: |
          alembic upgrade head

      - name: Echo Environment Variables
        run: |
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ env.ACCESS_TOKEN_EXPIRE_MINUTES }}"
          echo "ALGORITHM=${{ vars.ALGORITHM }}"
          echo "EMAIL_RESET_TOKEN_EXPIRE_HOURS=${{ vars.EMAIL_RESET_TOKEN_EXPIRE_HOURS }}"

      - name: Verify Secret Variables
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then echo "DATABASE_URL is not set"; exit 1; fi
          if [ -z "${{ secrets.SECRET_KEY }}" ]; then echo "SECRET_KEY is not set"; exit 1; fi
